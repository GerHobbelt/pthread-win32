set(PTHREAD_CONFIG_H "
/* config.h, automagically generated by cmake. */

#ifndef __PTW32_CONFIG_H
#define __PTW32_CONFIG_H

/* Define to 1 if you have the `calloc' function. */
#cmakedefine HAVE_CALLOC 1

/* Define if CPU_AFFINITY is supported */
#define HAVE_CPU_AFFINITY 1

/* Define to 1 if you have the <errno.h> header file. */
#cmakedefine HAVE_ERRNO_H 1

/* Define to 1 if you have the <inttypes.h> header file. */
#cmakedefine HAVE_INTTYPES_H 1

/* Define to 1 if you have the <memory.h> header file. */
#cmakedefine HAVE_MEMORY_H 1

/* Define if your compiler knows about mode_t */
#define HAVE_MODE_T 1

/* Define to 1 if you have the <signal.h> header file. */
#cmakedefine HAVE_SIGNAL_H 1

/* Define if your compiler knows about sigset_t */
#cmakedefine HAVE_SIGSET_T  1

/* Define to 1 if you have the <stdint.h> header file. */
#cmakedefine HAVE_STDINT_H 1

/* Define to 1 if you have the <stdlib.h> header file. */
#cmakedefine HAVE_STDLIB_H 1

/* Define to 1 if you have the <strings.h> header file. */
#cmakedefine HAVE_STRINGS_H 1

/* Define to 1 if you have the <string.h> header file. */
#cmakedefine HAVE_STRING_H 1

/* Define if your compiler knows about struct timespec */
#cmakedefine HAVE_STRUCT_TIMESPEC 1

/* Define to 1 if you have the <sys/stat.h> header file. */
#cmakedefine HAVE_SYS_STAT_H 1

/* Define to 1 if you have the <sys/types.h> header file. */
#cmakedefine HAVE_SYS_TYPES_H 1

/* Define to 1 if you have the <time.h> header file. */
#cmakedefine HAVE_TIME_H 1

/* Define to 1 if you have the <unistd.h> header file. */
#cmakedefine HAVE_UNISTD_H 1

/* Define to 1 if you have the `_beginthreadex' function. */
#cmakedefine HAVE__BEGINTHREADEX 1

/* Define to 1 if you have the DuplicateHandle function. */
#cmakedefine HAVE_DUPLICATEHANDLE 1

/* Make sure that __PTW32_BUILD is defined. */
#if !defined(__PTW32_BUILD)
#define __PTW32_BUILD
#endif

/* Define if you do not have calloc */
#if !defined(HAVE_CALLOC) || !HAVE_CALLOC
#define NEED_CALLOC
#endif

#if !defined(HAVE__BEGINTHREADEX) || !HAVE__BEGINTHREADEX
#define NEED_CREATETHREAD
#endif

/* Define if DuplicateHandle is unsupported */
#if !defined(HAVE_DUPLICATEHANDLE) || !HAVE_DUPLICATEHANDLE
#define NEED_DUPLICATEHANDLE
#endif

/* Define if you do not have errno */
/* #undef NEED_ERRNO */

/* Define to the address where bug reports for this package should be sent. */
#define PACKAGE_BUGREPORT \"\"

/* Define to the full name of this package. */
#define PACKAGE_NAME \"pthreads4w\"

/* Define to the full name and version of this package. */
#define PACKAGE_STRING \"pthreads4w git\"

/* Define to the one symbol short name of this package. */
#define PACKAGE_TARNAME \"pthreads4w\"

/* Define to the home page for this package. */
#define PACKAGE_URL \"\"

/* Define to the version of this package. */
#define PACKAGE_VERSION \"git\"

/* Define to 1 if you have the ANSI C header files. */
#define STDC_HEADERS 1

/* Define to `__inline__' or `__inline' if that's what the C compiler
   calls it, or to nothing if 'inline' is not supported under any name.  */
#ifndef __cplusplus
/* #undef inline */
#endif

#define HAVE_C_INLINE 1

#endif
")


function (create_config_h_in)
    file(WRITE 
        "${CMAKE_BINARY_DIR}/config.h.in"
        "${PTHREAD_CONFIG_H}")
endfunction (create_config_h_in)
