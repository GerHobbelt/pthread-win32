language: shell

os: windows

env:
  - BUILD_TYPE=Debug VS2017=amd64 TESTING=OFF
  - BUILD_TYPE=Release VS2017=amd64 TESTING=OFF
  - BUILD_TYPE=MinSizeRel VS2017=amd64 TESTING=OFF
  - BUILD_TYPE=MinSizeRel VS2017=amd64 TESTING=OFF

  - BUILD_TYPE=Debug VS2017=amd64_x86 TESTING=OFF
  - BUILD_TYPE=Release VS2017=amd64_x86 TESTING=OFF
  - BUILD_TYPE=MinSizeRel VS2017=amd64_x86 TESTING=OFF
  - BUILD_TYPE=MinSizeRel VS2017=amd64_x86 TESTING=OFF

  #- BUILD_TYPE=Debug VS2017=amd64_arm TESTING=OFF
  #- BUILD_TYPE=Release VS2017=amd64_arm TESTING=OFF
  #- BUILD_TYPE=MinSizeRel VS2017=amd64_arm TESTING=OFF
  #- BUILD_TYPE=MinSizeRel VS2017=amd64_arm TESTING=OFF

  #- BUILD_TYPE=Debug VS2017=amd64_arm64 TESTING=OFF
  #- BUILD_TYPE=Release VS2017=amd64_arm64 TESTING=OFF
  #- BUILD_TYPE=MinSizeRel VS2017=amd64_arm64 TESTING=OFF
  #- BUILD_TYPE=MinSizeRel VS2017=amd64_arm64 TESTING=OFF

#install:
  #- DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  #- mkdir ${DEPS_DIR} && cd ${DEPS_DIR} && pwd
  #- travis_retry wget --no-check-certificate https://cmake.org/files/v3.11/cmake-3.11.0-win64-x64.zip
  #- echo "615dfb0813443c1ff56ae0e9d6dbfc61 *cmake-3.11.0-win64-x64.zip" > cmake_md5.txt
  #- md5sum -c cmake_md5.txt
  #- 7z x -y cmake-3.11.0-win64-x64.zip
  #- PATH=${DEPS_DIR}/cmake-3.11.0-win64-x64:${DEPS_DIR}/cmake-3.11.0-win64-x64/bin:$PATH

before_script:

  # document the version
  #- cmake --version
  #- cmake --help  

  # set enviromental variables
  - ls "/c/Progra~2/Microsoft Visual Studio/2017/BuildTools/VC/Auxiliary/Build/"
    #vcvars32.bat
    #vcvars64.bat
    #vcvarsall.bat
    #vcvarsamd64_arm.bat
    #vcvarsamd64_arm64.bat
    #vcvarsamd64_x86.bat
    #vcvarsx86_amd64.bat
    #vcvarsx86_arm.bat
    #vcvarsx86_arm64.bat
  #- printenv

  #- msvcenv="__msvc.bat"
  #- echo "@echo off" > "$msvcenv"
  #- echo "call /c/Progra~2/Microsoft\ Visual\ Studio/2017/BuildTools/VC/Auxiliary/Build/vcvarsall.bat ${VS2017}" >> "$msvcenv"
  #- echo "set" >> "$msvcenv"
  #- cmd "/K $msvcenv"
  # > "$msenv.tmp"

  #- cat "$msvcenv"
  #- rm -f "$msvcenv"

  - printenv

  #- cat "$msenv.tmp"

  #- grep -e '^PATH=' "$msenv.tmp" | \
      #sed \
        #-e 's/\(.*\)=\(.*\)/export \1="\2:$PATH"/g' \
        #-e 's/\([a-zA-Z]\):[\\\/]/\/\1\//g' \
        #-e 's/\\/\//g' -e 's/;\//:\//g'
      # > "$msenv"
  #- grep -e '^(INCLUDE|LIB|LIBPATH)=' "$msenv.tmp" | sed -e 's/\(.*\)=\(.*\)/export \1="\2"/g' >> "$msenv"
  #- rm "$msenv.tmp"
  #- cat "$msenv"
  #- source "$msenv"

  #- printenv

  - call "c:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Auxiliary\Build\vcvars32.bat" ${VS2017}
  #- cmd "/K C:\\Progra~2\\Microsoft\ Visual\ Studio\\2017\\BuildTools\\VC\\Auxiliary\\Build\\vcvarsall.bat ${VS2017}"
  #- /c/Progra~2/Microsoft\ Visual\ Studio/2017/BuildTools/VC/Auxiliary/Build/vcvarsall.bat ${VS2017} > "$msenv.tmp"
  #- cat "$msenv.tmp"
  #- printenv

  # Visual Studio 2015
  #- ls "/c/Progra~2/Microsoft Visual Studio 14.0/VC/"
  #- /c/Progra~2/Microsoft\ Visual\ Studio\ 14.0/VC/vcvarsall.bat amd64

  # generate the build files
  - cd ${TRAVIS_BUILD_DIR} && mkdir build && cd build
  - cmake -G"NMake Makefiles" -DCMAKE_VERBOSE_MAKEFILE=FALSE -DCMAKE_BUILD_TYPE=${BUILD_TYPE}
          #-DBUILD_NUMBER=${TRAVIS_BUILD_NUMBER}
          #-DDIST_ROOT="${TRAVIS_BUILD_DIR}/build/dist"
          #-DENABLE_TESTS=${TESTING}
          #..
script:
  - cmake --build . --config ${BUILD_TYPE} --target install

addons:
  coverity_scan:
    project:
      name: â€œjwinarske/pthreads4w"
    notification_email: joel.winarske@gmail.com
    build_command_prepend: "mkdir build && cd build && cmake -DCMAKE_VERBOSE_MAKEFILE=TRUE -DDCMAKE_INSTALL_PREFIX=`pwd`/dist .."
    build_command:   "cmake --build . --target install"
    branch_pattern: coverity_scan
